# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name: "Test Packages"

on: # yamllint disable-line rule:truthy
    pull_request:
        branches:
            - "([0-9])?(.{+([0-9]),x}).x"
            - "main"
            - "next"
            - "next-major"
            - "alpha"
            - "beta"
    workflow_dispatch: # yamllint disable-line rule:empty-values

jobs:
    test:
        name: "tests"

        runs-on: "ubuntu-latest"

        strategy:
            matrix:
                os: ["ubuntu-latest"]
                node_version: ["16.x", "17.x"]
                include:
                    - os: "macos-latest"
                      node_version: "16"
                    - os: "windows-latest"
                      node_version: "16"
            fail-fast: false

        steps:
            - name: "Git checkout"
              uses: "actions/checkout@v2"
              with:
                  fetch-depth: 0
                  persist-credentials: false
              env:
                  GIT_COMMITTER_NAME: "GitHub Actions Shell"
                  GIT_AUTHOR_NAME: "GitHub Actions Shell"
                  EMAIL: "github-actions[bot]@users.noreply.github.com"

            - name: "Configure Container"
              env:
                  GIT_USER_EMAIL: "${{ secrets.GIT_USER_EMAIL }}"
                  GIT_USER_USERNAME: "${{ secrets.GIT_USER_USERNAME }}"
              run: |
                  EMAIL=${GIT_USER_EMAIL:-"github-actions[bot]@users.noreply.github.com"}
                  NAME=${GIT_USER_USERNAME:-"github-actions-shell"}

                  git config --global user.email "${EMAIL}"
                  git config --global user.name "${NAME}"

            - name: "Use Node.js ${{ matrix.node-version }}"
              uses: "actions/setup-node@v3"
              with:
                  node-version: "${{ matrix.node-version }}"

            - name: "Install pnpm"
              run: "curl -f https://get.pnpm.io/v6.16.js | node - add --global pnpm@6"

            - name: "Cache .pnpm-store"
              uses: "actions/cache@v2"
              id: "pnpm-cache" # use this to check for `cache-hit` (`steps.pnpm-cache.outputs.cache-hit != 'true'`)
              with:
                  path: "~/.pnpm-store"
                  key: "${{ runner.os }}-node${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}"
                  restore-keys: |
                      ${{ runner.os }}-pnpm-

            - name: "Install packages"
              run: "pnpm install --frozen-lockfile"

            - name: "test and coverage"
              run: "pnpm jest --verbose --ci --reporters=default --reporters=jest-junit"

            - name: "Upload test results"
              if: "success() || failure()"
              uses: "actions/upload-artifact@v2"
              with:
                  name: "test-results"
                  path: "./coverage/junit.xml"

            - name: "Create test report"
              uses: "dorny/test-reporter@v1"
              if: "success() || failure()"
              with:
                  name: "JEST Tests"
                  path: "./coverage/junit.xml"
                  reporter: "jest-junit"

            - uses: "codecov/codecov-action@v2"
              with:
                  flags: "unittests" # optional
                  name: "codecov-umbrella" # optional
                  fail_ci_if_error: true # optional (default = false)
                  verbose: true # optional (default = false)
